// Code generated by protoc-gen-go.
// source: bazil.org/bazil/server/control/wire/peer.proto
// DO NOT EDIT!

package wire

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PeerAddRequest struct {
	// Must be exactly 32 bytes long.
	Pub []byte `protobuf:"bytes,2,opt,name=pub,proto3" json:"pub,omitempty"`
}

func (m *PeerAddRequest) Reset()                    { *m = PeerAddRequest{} }
func (m *PeerAddRequest) String() string            { return proto.CompactTextString(m) }
func (*PeerAddRequest) ProtoMessage()               {}
func (*PeerAddRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type PeerAddResponse struct {
}

func (m *PeerAddResponse) Reset()                    { *m = PeerAddResponse{} }
func (m *PeerAddResponse) String() string            { return proto.CompactTextString(m) }
func (*PeerAddResponse) ProtoMessage()               {}
func (*PeerAddResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type PeerLocationSetRequest struct {
	// Must be exactly 32 bytes long.
	Pub    []byte `protobuf:"bytes,1,opt,name=pub,proto3" json:"pub,omitempty"`
	Netloc string `protobuf:"bytes,2,opt,name=netloc" json:"netloc,omitempty"`
}

func (m *PeerLocationSetRequest) Reset()                    { *m = PeerLocationSetRequest{} }
func (m *PeerLocationSetRequest) String() string            { return proto.CompactTextString(m) }
func (*PeerLocationSetRequest) ProtoMessage()               {}
func (*PeerLocationSetRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type PeerLocationSetResponse struct {
}

func (m *PeerLocationSetResponse) Reset()                    { *m = PeerLocationSetResponse{} }
func (m *PeerLocationSetResponse) String() string            { return proto.CompactTextString(m) }
func (*PeerLocationSetResponse) ProtoMessage()               {}
func (*PeerLocationSetResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type PeerStorageAllowRequest struct {
	// Must be exactly 32 bytes long.
	Pub     []byte `protobuf:"bytes,1,opt,name=pub,proto3" json:"pub,omitempty"`
	Backend string `protobuf:"bytes,2,opt,name=backend" json:"backend,omitempty"`
}

func (m *PeerStorageAllowRequest) Reset()                    { *m = PeerStorageAllowRequest{} }
func (m *PeerStorageAllowRequest) String() string            { return proto.CompactTextString(m) }
func (*PeerStorageAllowRequest) ProtoMessage()               {}
func (*PeerStorageAllowRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

type PeerStorageAllowResponse struct {
}

func (m *PeerStorageAllowResponse) Reset()                    { *m = PeerStorageAllowResponse{} }
func (m *PeerStorageAllowResponse) String() string            { return proto.CompactTextString(m) }
func (*PeerStorageAllowResponse) ProtoMessage()               {}
func (*PeerStorageAllowResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

type PeerVolumeAllowRequest struct {
	// Must be exactly 32 bytes long.
	Pub        []byte `protobuf:"bytes,1,opt,name=pub,proto3" json:"pub,omitempty"`
	VolumeName string `protobuf:"bytes,2,opt,name=volumeName" json:"volumeName,omitempty"`
}

func (m *PeerVolumeAllowRequest) Reset()                    { *m = PeerVolumeAllowRequest{} }
func (m *PeerVolumeAllowRequest) String() string            { return proto.CompactTextString(m) }
func (*PeerVolumeAllowRequest) ProtoMessage()               {}
func (*PeerVolumeAllowRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

type PeerVolumeAllowResponse struct {
}

func (m *PeerVolumeAllowResponse) Reset()                    { *m = PeerVolumeAllowResponse{} }
func (m *PeerVolumeAllowResponse) String() string            { return proto.CompactTextString(m) }
func (*PeerVolumeAllowResponse) ProtoMessage()               {}
func (*PeerVolumeAllowResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func init() {
	proto.RegisterType((*PeerAddRequest)(nil), "bazil.control.PeerAddRequest")
	proto.RegisterType((*PeerAddResponse)(nil), "bazil.control.PeerAddResponse")
	proto.RegisterType((*PeerLocationSetRequest)(nil), "bazil.control.PeerLocationSetRequest")
	proto.RegisterType((*PeerLocationSetResponse)(nil), "bazil.control.PeerLocationSetResponse")
	proto.RegisterType((*PeerStorageAllowRequest)(nil), "bazil.control.PeerStorageAllowRequest")
	proto.RegisterType((*PeerStorageAllowResponse)(nil), "bazil.control.PeerStorageAllowResponse")
	proto.RegisterType((*PeerVolumeAllowRequest)(nil), "bazil.control.PeerVolumeAllowRequest")
	proto.RegisterType((*PeerVolumeAllowResponse)(nil), "bazil.control.PeerVolumeAllowResponse")
}

var fileDescriptor1 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0xa9, 0xca, 0x8a, 0x83, 0x7f, 0xf7, 0x50, 0x57, 0x0f, 0x22, 0x39, 0x79, 0xda, 0x1c,
	0xfc, 0x04, 0x2d, 0x78, 0x11, 0x11, 0xd9, 0x82, 0x07, 0x6f, 0xd9, 0xdd, 0xa1, 0x2c, 0xa6, 0x99,
	0x38, 0xc9, 0xb6, 0xe0, 0xa7, 0xd7, 0x4d, 0xd2, 0xa2, 0x16, 0xe9, 0x6d, 0x66, 0xde, 0x9b, 0xdf,
	0x63, 0x12, 0x28, 0x6b, 0xf5, 0xd9, 0xe9, 0x92, 0x78, 0x2e, 0x43, 0x25, 0x1d, 0xf2, 0x12, 0x59,
	0x36, 0x64, 0x3c, 0x93, 0x96, 0xab, 0x8e, 0x51, 0x5a, 0x44, 0x2e, 0x2d, 0x93, 0xa7, 0xfc, 0x24,
	0xfa, 0x93, 0x2c, 0x04, 0x9c, 0xbe, 0x7c, 0x8b, 0x93, 0xb6, 0xad, 0xf0, 0xa3, 0x47, 0xe7, 0xf3,
	0x73, 0xd8, 0xb7, 0x7d, 0x5d, 0xec, 0xdd, 0x8e, 0xee, 0x8e, 0xab, 0xa1, 0x14, 0x17, 0x70, 0xb6,
	0xf1, 0x38, 0x4b, 0xc6, 0xa1, 0x98, 0xc2, 0x78, 0x18, 0x3d, 0x51, 0xa3, 0x7c, 0x47, 0x66, 0x86,
	0xfe, 0xcf, 0xfa, 0x68, 0xb3, 0x9e, 0x8f, 0x21, 0x33, 0xe8, 0x35, 0x35, 0x81, 0x79, 0x54, 0xa5,
	0x4e, 0x5c, 0xc1, 0xe5, 0x16, 0x23, 0xe1, 0x1f, 0xa2, 0x34, 0xf3, 0xc4, 0x6a, 0x8e, 0x13, 0xad,
	0x69, 0xf5, 0x3f, 0xbf, 0x80, 0xc3, 0x5a, 0x35, 0xef, 0x68, 0xda, 0x14, 0xb0, 0x6e, 0xc5, 0x35,
	0x14, 0xdb, 0x98, 0x14, 0xf1, 0x18, 0x2f, 0x78, 0x25, 0xdd, 0x2f, 0x76, 0x25, 0xdc, 0x00, 0x2c,
	0x83, 0xef, 0x59, 0x2d, 0x30, 0x85, 0xfc, 0x98, 0xac, 0x2f, 0xf9, 0xc5, 0x8a, 0x31, 0xd3, 0xec,
	0xed, 0x60, 0xf8, 0x81, 0x3a, 0x0b, 0xaf, 0x7f, 0xff, 0x15, 0x00, 0x00, 0xff, 0xff, 0x70, 0xf1,
	0x7b, 0xeb, 0xaf, 0x01, 0x00, 0x00,
}
